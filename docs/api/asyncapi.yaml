asyncapi: 3.0.0
info:
  title: Smart House Kafka API
  version: 0.0.1
  description: |-
    Smart House API посзволяет удаленно управлять устройтвами в доме.

  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
defaultContentType: application/json
servers:
  scram-connections:
    host: 127.0.0.1:18092
    protocol: kafka-secure
    description: Тестовый брокер
    security:
      - $ref: '#/components/securitySchemes/saslScram'
    tags:
      - name: env:test-scram
        description: >-
          Эта среда предназначена для запуска внутренних тестов через scramSha256
      - name: kind:remote
        description: Этот сервер является удаленным. Приложение не предоставляет доступ к нему
      - name: visibility:private
        description: Этот ресурс является закрытым и доступен только определенным пользователям
  mtls-connections:
    host: 127.0.0.1:28092
    protocol: kafka-secure
    description: Тестовый брокер
    security:
      - $ref: '#/components/securitySchemes/certs'
    tags:
      - name: env:test-mtls
        description: This environment is meant for running internal tests through mtls
      - name: kind:remote
        description: This server is a remote server. Not exposed by the application
      - name: visibility:private
        description: This resource is private and only available to certain users
channels:
  devicesTelemetry:
    address: smarthouse.telemtry.1.0.event.{houseId}
    messages:
      deviceTelemetry:
        $ref: '#/components/messages/deviceTelemetry'
    description: Топик по которому передается телеметрия.
    parameters:
      houseId:
        $ref: '#/components/parameters/houseId'
  houseLightTurnOn:
    address: smarthouse.house_lights.1.0.action.{deviceId}.turn.on
    messages:
      turnOn:
        $ref: '#/components/messages/turnOnOff'
    parameters:
      deviceId:
        $ref: '#/components/parameters/deviceId'
  houseLightTurnOff:
    address: smarthouse.house_lights.1.0.action.{deviceId}.turn.off
    messages:
      turnOff:
        $ref: '#/components/messages/turnOnOff'
    parameters:
      deviceId:
        $ref: '#/components/parameters/deviceId'
  houseHeatingTurnOn:
    address: smarthouse.house_heating.1.0.action.{deviceId}.turn.on
    messages:
      turnOn:
        $ref: '#/components/messages/turnOnOff'
    parameters:
      deviceId:
        $ref: '#/components/parameters/deviceId'
  houseHeatingTurnOff:
    address: smarthouse.house_heating.1.0.action.{deviceId}.turn.off
    messages:
      turnOff:
        $ref: '#/components/messages/turnOnOff'
    parameters:
      deviceId:
        $ref: '#/components/parameters/deviceId'
  houseHeatingSetTemperature:
    address: smarthouse.house_heating.1.0.action.{deviceId}.set.temperature
    messages:
      setTemperature:
        $ref: '#/components/messages/setTemperature'
    parameters:
      deviceId:
        $ref: '#/components/parameters/deviceId'
operations:
  receiveDeviceTelemetry:
    action: receive
    channel:
      $ref: '#/channels/devicesTelemetry'
    summary: >-
      Отправить метрики устройства.
    traits:
      - $ref: '#/components/operationTraits/kafka'
    messages:
      - $ref: '#/channels/devicesTelemetry/messages/deviceTelemetry'
  houseLightTurnOn:
    action: send
    channel:
      $ref: '#/channels/houseLightTurnOn'
    traits:
      - $ref: '#/components/operationTraits/kafka'
    messages:
      - $ref: '#/channels/houseLightTurnOn/messages/turnOn'
  houseLightturnOff:
    action: send
    channel:
      $ref: '#/channels/houseLightTurnOff'
    traits:
      - $ref: '#/components/operationTraits/kafka'
    messages:
      - $ref: '#/channels/houseLightTurnOff/messages/turnOff'
  houseHeatingTurnOn:
    action: send
    channel:
      $ref: '#/channels/houseHeatingTurnOn'
    traits:
      - $ref: '#/components/operationTraits/kafka'
    messages:
      - $ref: '#/channels/houseHeatingTurnOn/messages/turnOn'
  houseHeatingTurnOff:
    action: send
    channel:
      $ref: '#/channels/houseHeatingTurnOff'
    traits:
      - $ref: '#/components/operationTraits/kafka'
    messages:
      - $ref: '#/channels/houseHeatingTurnOff/messages/turnOff'
  houseHeatingSetTemperature:
    action: send
    channel:
      $ref: '#/channels/houseHeatingSetTemperature'
    traits:
      - $ref: '#/components/operationTraits/kafka'
    messages:
      - $ref: '#/channels/houseHeatingSetTemperature/messages/setTemperature'
components:
  messages:
    deviceTelemetry:
      name: deviceTelemetry
      title: Телеметрия устройства
      summary: >-
        Телеметрия устройства.
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: '#/components/schemas/deviceTelemetryPayload'
    setTemperature:
      name: setTemperature
      title: Установить температуру в доме
      summary: >-
        Установить температуру в доме.
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: '#/components/schemas/setTemperaturePayload'
    turnOnOff:
      name: turnOnOff
      title: Turn on/off
      summary: Команда конкретному устройству включиться или выключиться.
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: '#/components/schemas/turnOnOffPayload'
  schemas:
    deviceTelemetryPayload:
      type: object
      properties:
        device_id:
          type: string
          description: ID устройства
        data:
          type: integer
          description: Данные телеметрии устройства.
        sentAt:
          $ref: '#/components/schemas/sentAt'
    setTemperaturePayload:
      type: object
      properties:
        device_id:
          type: string
          description: ID устройства
        temperature:
          type: integer
          description: Температура в доме.
        sentAt:
          $ref: '#/components/schemas/sentAt'
    turnOnOffPayload:
      type: object
      properties:
        command:
          type: string
          enum:
            - 'on'
            - 'off'
          description: Команда Включить/выключить.
        sentAt:
          $ref: '#/components/schemas/sentAt'
    sentAt:
      type: string
      format: date-time
      description: Дата и время отправки события.
  securitySchemes:
    saslScram:
      type: scramSha256
      description: Укажите свое имя пользователя и пароль для аутентификации SASL/SCRAM
    certs:
      type: X509
      description: Download the certificate files from service provider
  parameters:
    houseId:
      description: ID дома.
    deviceId:
      description: The ID of the streetlight.
  messageTraits:
    commonHeaders:
      headers:
        type: object
        properties:
          my-app-header:
            type: integer
            minimum: 0
            maximum: 100
  operationTraits:
    kafka:
      bindings:
        kafka:
          clientId:
            type: string
            enum:
              - my-app-id
